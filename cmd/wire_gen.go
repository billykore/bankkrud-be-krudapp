// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/labstack/echo/v4"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/infra/api"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/infra/http/handler"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/infra/http/server"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/infra/service"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/infra/storage/repo"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/pkg/config"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/pkg/db/postgres"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/pkg/db/redis"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/pkg/httpclient"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/pkg/validation"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/usecase/authentication"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/usecase/tapmoney"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/usecase/transaction"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/usecase/transfer"
	"go.bankkrud.com/bankkrud/backend/krudapp/internal/usecase/user"
)

// Injectors from wire.go:

func initKrudApp(cfg *config.Configs) *krudApp {
	echoEcho := echo.New()
	validator := validation.New()
	client := httpclient.New()
	cbsAuth := api.NewCBS(cfg, client)
	cbsStatusAPI := api.NewCBSStatusAPI(cfg, client, cbsAuth)
	db := postgres.New(cfg)
	transactionRepo := repo.NewTransactionRepo(db)
	paymentGateway := api.NewPaymentGateway(cfg, client)
	accountAPI := api.NewAccountAPI(cfg, client, cbsAuth)
	usecase := tapmoney.NewUsecase(cbsStatusAPI, transactionRepo, paymentGateway, accountAPI)
	tapMoneyHandler := handler.NewTapMoneyHandler(validator, usecase)
	transferAPI := api.NewTransferAPI(cfg, client, cbsAuth)
	transferUsecase := transfer.NewUsecase(cbsStatusAPI, transactionRepo, accountAPI, transferAPI)
	transferHandler := handler.NewTransferHandler(validator, transferUsecase)
	redisClient := redis.New(cfg)
	userRepo := repo.NewUserRepo(cfg, db, redisClient)
	authService := service.NewAuthService(cfg)
	authenticationUsecase := authentication.NewUsecase(userRepo, authService)
	authenticationHandler := handler.NewAuthenticationHandler(validator, authenticationUsecase)
	userUsecase := user.NewUsecase(userRepo)
	userHandler := handler.NewUserHandler(validator, userUsecase)
	transactionUsecase := transaction.NewUsecase(transactionRepo)
	transactionHandler := handler.NewTransactionHandler(validator, transactionUsecase)
	httpServer := server.NewHTTP(cfg, echoEcho, tapMoneyHandler, transferHandler, authenticationHandler, userHandler, transactionHandler)
	mainKrudApp := newKrudApp(httpServer, db, redisClient)
	return mainKrudApp
}
