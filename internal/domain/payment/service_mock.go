// Code generated by mockery v2.53.3. DO NOT EDIT.

package payment

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockService is an autogenerated mock type for the Service type
type MockService struct {
	mock.Mock
}

type MockService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockService) EXPECT() *MockService_Expecter {
	return &MockService_Expecter{mock: &_m.Mock}
}

// Inquiry provides a mock function with given fields: ctx, channel, bill
func (_m *MockService) Inquiry(ctx context.Context, channel Channel, bill Bill) (Payment, error) {
	ret := _m.Called(ctx, channel, bill)

	if len(ret) == 0 {
		panic("no return value specified for Inquiry")
	}

	var r0 Payment
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, Channel, Bill) (Payment, error)); ok {
		return rf(ctx, channel, bill)
	}
	if rf, ok := ret.Get(0).(func(context.Context, Channel, Bill) Payment); ok {
		r0 = rf(ctx, channel, bill)
	} else {
		r0 = ret.Get(0).(Payment)
	}

	if rf, ok := ret.Get(1).(func(context.Context, Channel, Bill) error); ok {
		r1 = rf(ctx, channel, bill)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockService_Inquiry_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Inquiry'
type MockService_Inquiry_Call struct {
	*mock.Call
}

// Inquiry is a helper method to define mock.On call
//   - ctx context.Context
//   - channel Channel
//   - bill Bill
func (_e *MockService_Expecter) Inquiry(ctx interface{}, channel interface{}, bill interface{}) *MockService_Inquiry_Call {
	return &MockService_Inquiry_Call{Call: _e.mock.On("Inquiry", ctx, channel, bill)}
}

func (_c *MockService_Inquiry_Call) Run(run func(ctx context.Context, channel Channel, bill Bill)) *MockService_Inquiry_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(Channel), args[2].(Bill))
	})
	return _c
}

func (_c *MockService_Inquiry_Call) Return(_a0 Payment, _a1 error) *MockService_Inquiry_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockService_Inquiry_Call) RunAndReturn(run func(context.Context, Channel, Bill) (Payment, error)) *MockService_Inquiry_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockService creates a new instance of MockService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockService {
	mock := &MockService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
