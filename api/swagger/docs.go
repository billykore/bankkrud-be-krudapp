// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://swagger.io/terms/",
        "contact": {
            "name": "Billy Kore",
            "url": "https://www.swagger.io/support",
            "email": "billyimmcul2010@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tapmoney/inquiry": {
            "post": {
                "description": "TapMoney transaction inquiry process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "TapMoney inquiry",
                "parameters": [
                    {
                        "description": "Inquiry Request",
                        "name": "InquiryRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tapmoney.InquiryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/tapmoney/payment": {
            "post": {
                "description": "TapMoney transaction payment process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "TapMoney payment",
                "parameters": [
                    {
                        "description": "Payment Request",
                        "name": "PaymentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tapmoney.PaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/transfer/detail/{uuid}": {
            "get": {
                "description": "Get transfer detail by uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfer"
                ],
                "summary": "Get transfer detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transfer UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/transfer/init": {
            "post": {
                "description": "Initiate transfer transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfer"
                ],
                "summary": "Initiate transfer",
                "parameters": [
                    {
                        "description": "Initiate Transfer Request",
                        "name": "InitiateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transfer.InitiateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/transfer/process": {
            "post": {
                "description": "Process transfer transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfer"
                ],
                "summary": "Process transfer",
                "parameters": [
                    {
                        "description": "Process Transfer Request",
                        "name": "ProcessRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transfer.ProcessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "Get user by username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fields",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "detail": {
                    "type": "string"
                },
                "errors": {},
                "title": {
                    "type": "string"
                }
            }
        },
        "tapmoney.InquiryRequest": {
            "type": "object",
            "required": [
                "amount",
                "card_number",
                "source_account"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "maximum": 1000000,
                    "minimum": 10000
                },
                "card_number": {
                    "type": "string",
                    "maxLength": 19,
                    "minLength": 16
                },
                "source_account": {
                    "type": "string",
                    "maxLength": 19,
                    "minLength": 16
                }
            }
        },
        "tapmoney.PaymentRequest": {
            "type": "object",
            "required": [
                "amount",
                "transaction_id"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "maximum": 1000000,
                    "minimum": 10000
                },
                "notes": {
                    "type": "string",
                    "maxLength": 255
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "transfer.InitiateRequest": {
            "type": "object",
            "required": [
                "amount",
                "destination_account",
                "source_account"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "maximum": 50000000,
                    "minimum": 1000
                },
                "destination_account": {
                    "type": "string"
                },
                "source_account": {
                    "type": "string"
                }
            }
        },
        "transfer.ProcessRequest": {
            "type": "object",
            "required": [
                "amount",
                "destination_account",
                "source_account",
                "uuid"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "destination_account": {
                    "type": "string"
                },
                "source_account": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.bankkrud.com",
	BasePath:         "/v1.0",
	Schemes:          []string{"http", "https"},
	Title:            "API Specification",
	Description:      "TapMoney service API specification.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
